buildUrl="${RUN_DISPLAY_URL}"
a=buildUrl.split("/").minus("display","redirect")+"console"
consoleUrl=a.join("/")
echo "${consoleUrl}"

pipeline {
    agent { dockerfile true }
    stages {
        
        stage('Printing an output') {
            steps {
                sh 'python --version'
                sh 'python app.py'
            }
        }
        stage('Test') {
            steps {
                sh 'py.test --junit-xml test-reports/results.xml test_calc.py'
            }
        }
    }
    post {
        success {
            mail body: "Console output of this build is '${consoleUrl}' ",subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) is waiting for input" ,to: 'GauravG4@hexaware.com'
        }
        failure {
            mail body: "Build has been failed..!' ",subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) is waiting for input" ,to: 'GauravG4@hexaware.com'
        }
        always {
                 junit 'test-reports/results.xml'
         }
    }
}
